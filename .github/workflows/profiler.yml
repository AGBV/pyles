name: create profiler report

on:
  push:
    branches:
      - master
    paths:
      - "pyles/**"
      - "main.py"
      - ".github/workflows/profiler.yml"

jobs:
  profiler:
    runs-on: 
      - self-hosted
      - gpu

    defaults:
      run:
        shell: bash -l {0}

    permissions:
      contents: write
      packages: write

    steps:
      - name: Set up Git repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # - uses: conda-incubator/setup-miniconda@v2
      #   with:
      #     miniconda-version: "latest"
      #     activate-environment: pyles-conda
      #     environment-file: conda-env.yml
      #     use-only-tar-bz2: true
      #     auto-activate-base: false

      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          activate-environment: pyles-conda
          use-only-tar-bz2: true

      - name: Get Date
        id: get-date
        run: echo "::set-output name=today::$(/bin/date -u '+%Y%m%d')"
        shell: bash

      - name: Cache Conda env
        uses: actions/cache@v2
        with:
          path: ${{ env.CONDA }}/envs
          key: conda-${{ runner.os }}--${{ runner.arch }}--${{ steps.get-date.outputs.today }}-${{ hashFiles('etc/example-environment-caching.yml') }}-${{ env.CACHE_NUMBER }}
        env:
          CACHE_NUMBER: 0
        id: cache

      # - uses: conda-incubator/setup-miniconda@v2
      #   with:
      #     miniconda-version: "latest"
      #     activate-environment: pyles-conda
      #     environment-file: conda-env.yml
      #     use-only-tar-bz2: true
      #     auto-activate-base: false

      - name: Update environment
        run: conda env update -n pyles-conda -f conda-env.yml
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Install profiler dependencies
        run: |
          pip install py-spy
          conda install -c plotly plotly
          conda install -c conda-forge python-kaleido

      - name: Generate Profile
        run: |
          py-spy record --nonblocking --format speedscope --output profile.speedscope.json -- python3 main.py

      - name: Send image as commit
        run: |
          cml publish ./main.png --md >> report.md
          cml send-comment report.md

      - name: Commit profiler results to gh-pages
        run: |
          git clone https://github.com/agbv/pyles.git --branch gh-pages --single-branch gh-pages
          cp profile.speedscope.json gh-pages/
          cd gh-pages
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Update documentation" -a || true

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          branch: gh-pages
          directory: gh-pages
          github_token: ${{ secrets.GITHUB_TOKEN }}
