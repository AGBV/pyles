name: Unit tests on self-hosted with Conda

on:
  push:
    branches:
      - master
    paths:
      - "src/**"
      - "tests/**"
      - ".github/workflows/test-self-hosted-conda.yml"
      - "sonar-project.properties"

jobs:
  unittest:
    runs-on:
      - self-hosted
      - gpu

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Set up Git repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: false

      - name: Cache conda
        uses: actions/cache@v2
        env:
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('conda-env.yml') }}

      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          activate-environment: pyles-conda
          environment-file: conda-env.yml
          use-only-tar-bz2: true
          auto-activate-base: false

      - name: Numba informations
        run: |
          numba -s

      - name: Install testing dependencies
        run: |
          conda install pytest pytest-cov coverage

      - name: Running pytest
        run: |
          pytest -v --cov --cov-report=xml --cov-report=html
          coverage xml -i

      - name: Override Coverage Source Path for Sonar
        run: |
          sed -i "s/<source>\/home\/runner\/_work\/pyles\/pyles<\/source>/<source>\/github\/workspace<\/source>/g" /home/runner/_work/pyles/pyles/coverage.xml

      - run: ls -la

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.xml
          retention-days: 1

      - name: Deploy docs with new coverage
        uses: mhausenblas/mkdocs-deploy-gh-pages@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CONFIG_FILE: mkdocs.yml
          REQUIREMENTS: docs/requirements.txt

  coverage:
    needs: unittest
    runs-on: ubuntu-latest

    steps:
      - name: Set up Git repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: false

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: coverage-report
      
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
